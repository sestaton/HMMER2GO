#!/bin/bash


#===========#
# Variables #
#===========#

# Test data directory
dir="t/test_data/"

# Pfam file
pfam2go="$dir/pfam2go"

# Fasta files
infile="$dir/t_seqs_nt_gz.fas.gz"
outorf="$dir/outfile_all"

# HMM related files
file=Pfam-A.hmm.gz
outfile=ftp.ebi.ac.uk//pub/databases/Pfam/current_release/$file
db="$dir/Pfam-A.hmm"

# Run related variables
outfile="$dir/t_orfs_long_Pfam-A.out"
domtblout="$dir/t_orfs_long_Pfam-A.domtblout"
tblout="$dir/t_orfs_long_Pfam-A.tblout"


#======#
# Test #
#======#

# List command
hmmer2go commands

# Fetch map
hmmer2go fetchmap -o "$pfam2go"

# Get ORF
hmmer2go getorf -i "$infile" -o "$outorf" -t 0 -a
[[ $(grep -c ">" "$outorf") -eq 172 ]]

## Run hmmpress
## Note: this step downloads the database and uncompresses it. Downloading can be done with either wget or curl but none of them are installed by default and variation between systems exists. It is probably better to not mess with this to avoid failing the test. Alternatively wget or curl could be a dependency.
# wget ftp://$outfile
# gunzip -c "$file" > "$flatdb"
# hmmpress $db

## Run run 
## Note: this step depends on database generated by hmmpress
# hmmer2go run -i $infile -d $db -o $tblout


